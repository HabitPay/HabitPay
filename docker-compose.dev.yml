version: "3"

services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    image: frontend
    ports:
      - 3000:3000
    restart: on-failure:3
    volumes:
      - ./frontend:/usr/app
    networks:
      - front-connection
    depends_on:
      postgres:
        condition: service_healthy
  #     backend:
  #       condition: service_healthy

  # backend:
  #   container_name: backend
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   image: backend
  #   expose:
  #     - 3000
  #   restart: on-failure:3
  #   networks:
  #     - front-connection
  #     - db-connection
  #   env_file:
  #     - ./OpenUmbrella-env/.env
  #   volumes:
  #     - ./backend/sql_app/.env:/usr/app/sql_app/.env
  #   depends_on:
  #     postgres:
  #       condition: service_healthy

  postgres:
    container_name: postgres
    image: postgres:16.2-alpine3.18
    restart: on-failure:3
    expose:
      - $$POSTGRES_PORT
    networks:
      - db-connection
    healthcheck:
      test: pg_isready -h 127.0.0.1 -d $$POSTGRES_DB -U $$POSTGRES_USER
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      TZ: "Asia/Seoul"
    env_file:
      - ./env/.env.db

volumes:
  postgres-data:

networks:
  front-connection:
    driver: bridge
  db-connection:
    driver: bridge
